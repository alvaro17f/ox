name: releaser

on:
  push:
    branches: [main]

env:
  NAME: ox

jobs:
  releaser:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: $NAME
            asset_name: $NAME-linux-amd64.tar.gz
            asset_directory: /tmp/
          - os: windows-latest
            artifact_name: $NAME.exe
            asset_name: $NAME-windows-amd64.zip
            asset_directory: D:\tmp\
          - os: macos-latest
            artifact_name: $NAME
            asset_name: $NAME-macos-arm64.tar.gz
            asset_directory: /tmp/

    runs-on: ${{ matrix.os }}

    permissions:
      id-token: write
      contents: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          submodules: true

      - name: Detect and tag new version
        uses: salsify/action-detect-and-tag-new-version@v2
        with:
          create-tag: true
          tag-template: "{VERSION}"
          version-command: |
            cat VERSION

      - name: Setup odin
        uses: laytan/setup-odin@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release: false

      # - name: Build release
      #   run: ./build_release.sh
      - name: Build
        shell: bash
        run: |
          # odin build main -out:${{ matrix.artifact_name }} -vet -strict-style -vet-tabs -disallow-do -warnings-as-errors
          odin build . -define="VERSION=$(cat VERSION)" -o:speed -out:${{ matrix.artifact_name }}
          ./${{ matrix.artifact_name }} --version

      - name: Compress binary
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a ${{ matrix.asset_name }} ${{ matrix.artifact_name }}
            mkdir -p D:\\tmp
            cp ${{ matrix.asset_name }} D:\\tmp\\${{ matrix.asset_name }}
          else
            tar -czf /tmp/${{ matrix.asset_name }} ${{ matrix.artifact_name }}
          fi

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.asset_directory}}${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
